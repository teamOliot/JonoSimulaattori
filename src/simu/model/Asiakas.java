package simu.model;

import simu.framework.Kello;
import simu.framework.Trace;

/**
 * @author Dahlman, Lappi, Laamo
 *
 */

public class Asiakas {
	private double saapumisaika;
	private double poistumisaika;
	private int id;
	private static int i = 1;
	private static long summaXY = 0;
	private static long summaX = 0;
	private static long summaY = 0;
	private static int lapimenneetX = 0;
	private static int lapimenneetY = 0;
	private static int saapuneetX = 0;
	private static int saapuneetY = 0;
	private AsiakasTyyppi tyyppi;

	/**
	 * @param tyyppi is type of customer 
	 */
	public Asiakas(AsiakasTyyppi tyyppi) {
		id = i;
		i++;
		this.tyyppi = tyyppi;
		saapumisaika = Kello.getInstance().getAika();
		if (this.tyyppi == AsiakasTyyppi.X) {
			saapuneetX++;
		}
		if (this.tyyppi == AsiakasTyyppi.Y) {
			saapuneetY++;
		}
		Trace.out(Trace.Level.INFO, "Uusi asiakas nro " + id + " saapui klo " + saapumisaika);
	}

	/**
	 * @return double is a time for leaving 
	 */
	public double getPoistumisaika() {
		return poistumisaika;
	}

	/**
	 * @param poistumisaika is time for leaving 
	 */
	public void setPoistumisaika(double poistumisaika) {
		this.poistumisaika = poistumisaika;
	}

	/**
	 * @return double time for arriving
	 */
	public double getSaapumisaika() {
		return saapumisaika;
	}

	/**
	 * @param saapumisaika is time for arriving
	 */
	public void setSaapumisaika(double saapumisaika) {
		this.saapumisaika = saapumisaika;
	}

	/**
	 * @return int is a autogenerated id 
	 */
	public int getId() {
		return id;
	}

	 
	/**
	 * @return type of customer
	 */
	public AsiakasTyyppi getTyyppi() {
		return tyyppi;
		
		
	}

	/**
	 * @param tyyppi is a type of customer
	 */
	public void setTyyppi(AsiakasTyyppi tyyppi) {
		this.tyyppi = tyyppi;
	}

	/**
	 * @return long  is departure time - arrival time for all customer types
	 */
	public static long getSummaXY() {
		return summaXY;
	}

	/**
	 * @return long is departure time - arrival for  X-type customer
	 */
	public static long getSummaX() {
		return summaX;
	}

	/**
	 * @return long is departure time - arrival for  X-type customer
	 */
	public static long getSummaY() {
		return summaY;
	}

	/**
	 * @return all X-type customers that have gone through system
	 */
	public static int getLapimenneetX() {
		return lapimenneetX;
		
	}

	/**
	 * @return all Y-type customers that have gone through system
	 */
	public static int getLapimenneetY() {
		return lapimenneetY;
	}

	/**
	 * @return amount of x type customers that have arrived to system
	 */
	public static int getSaapuneetX() {
		return saapuneetX;
	}

	/**
	 * @param saapuneetX parameter for setting amount of customers coming in to
	 *                   simulation
	 */
	public static void setSaapuneetX(int saapuneetX) {
		Asiakas.saapuneetX = saapuneetX;
	}

	/**
	 * @return amount of Y type customers that have arrived to system
	 */
	public static int getSaapuneetY() {
		return saapuneetY;
	}

	/**
	 * @param saapuneetY is for setting amount of customers coming in to simulation
	 *                   
	 */

	public static void setSaapuneetY(int saapuneetY) {
		Asiakas.saapuneetY = saapuneetY;
		
	}

	/**
	 * @param summaXY is departure time - arrival time for all customer types
	 */
	public static void setSummaXY(long summaXY) {
		Asiakas.summaXY = summaXY;
		
	}

	/**
	 * @param summaX is departure time - arrival time for X-customer type
	 */
	 
	public static void setSummaX(long summaX) {
		Asiakas.summaX = summaX;
		
	}

	/**
	 * @param summaY is departure time - arrival time for X-customer type
	 */
	public static void setSummaY(long summaY) {
		Asiakas.summaY = summaY;
		
	}

	/**
	 * @param lapimenneetX amount of X-type customers that have gone through system
	 */
	public static void setLapimenneetX(int lapimenneetX) {
		Asiakas.lapimenneetX = lapimenneetX;
		
	}

	/**
	 * @param lapimenneetY amount of X-type customers that have gone through system
	 */
	public static void setLapimenneetY(int lapimenneetY) {
		Asiakas.lapimenneetY = lapimenneetY;
		
	}

	/**
	 * @return lead time for customer type X
	 */
	public static double getXAsiakkaidenLapimenoaika() {
		double lapimenoaika = 0;
		try {
			lapimenoaika = 1.0 * Asiakas.getSummaX() / Asiakas.getLapimenneetX();

		} catch (Exception e) {
			System.out.println("Y asiakkaiden läpimenoajan laskenta epäonnistui, syy " + e);
		}
		return lapimenoaika;

	}

	/**
	 * @return lead time for customer type Y
	 */
	public static double getYAsiakkaidenLapimenoaika() {

		double lapimenoaika = 0;
		try {
			lapimenoaika = 1.0 * Asiakas.getSummaY() / Asiakas.getLapimenneetY();

		} catch (Exception e) {
			System.out.println("Y asiakkaiden läpimenoajan laskenta epäonnistui, syy " + e);
		}
		return lapimenoaika;

	}

	/**
	 * @return lead time for both customer type
	 */
	public static double getAsiakkaidenLapimenoaikaYht() {
		double lapimenoaika = 0;
		try {
			lapimenoaika = 1.0 * Asiakas.getSummaXY() / (Asiakas.getLapimenneetX() + Asiakas.getLapimenneetY());
		} catch (Exception e) {
			System.out.println("Läpimenoajan laskenta epäonnistui, syy " + e);
		}
		return lapimenoaika;
	}

	/**
	 * @return all customers that have arrived to system
	 */
	public static int getSaapuneetAsiakkaatYht() {
		return saapuneetX + saapuneetY;

	}

	/**
	 * 
	 */
	public void raportti() {
		Trace.out(Trace.Level.INFO, "\nAsiakas " + id + " tyyppi: " + this.tyyppi + " valmis! ");
		Trace.out(Trace.Level.INFO, "Asiakas " + id + " tyyppi: " + this.tyyppi + "   saapui: " + saapumisaika);
		Trace.out(Trace.Level.INFO, "Asiakas " + id + " tyyppi: " + this.tyyppi + " poistui: " + poistumisaika);
		Trace.out(Trace.Level.INFO,
				"Asiakas " + id + " tyyppi: " + this.tyyppi + " viipyi: " + (poistumisaika - saapumisaika));
		summaXY += (poistumisaika - saapumisaika);
		double keskiarvo = summaXY / id;

		if (this.tyyppi.equals(AsiakasTyyppi.X)) {
			summaX += (poistumisaika - saapumisaika);
			lapimenneetX++;
		}

		if (this.tyyppi.equals(AsiakasTyyppi.Y)) {
			summaY += (poistumisaika - saapumisaika);
			lapimenneetY++;
		}
		System.out.println("Asiakkaiden läpimenoaikojen keskiarvo tähän asti " + keskiarvo);
	}

}
